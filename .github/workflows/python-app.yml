# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [staging]
  pull_request:
    branches: [master, staging]
jobs:
  ci-cd-pipeline:
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v2
     - name: Set up Python 3.9
       uses: actions/setup-python@v2
       with:
         python-version: 3.9
     - name: Install dependencies
       run: |
         python -m pip install --upgrade pip
         pip install flake8 pytest
         if [ -f requirements-ci.txt ]; then pip install -r requirements-ci.txt; fi
     - name: Lint with flake8
       run: |
         # stop the build if there are Python syntax errors or undefined names
         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
     - name: Run unit tests
       run: |
         python3 manage.py makemigrations
         python3 manage.py test lists/     
     - name: Login to Heroku Container registry
       env: 
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
       run: heroku container:login 
     - name: Build container and push it to Heroku Container registry
       env: 
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
       run: |
        heroku container:push web -a ${{ secrets.HEROKU_APP_NAME_PROD }}  --arg EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }},\
        EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }},\
        AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }},\
        AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }},\
        AWS_STORAGE_BUCKET_NAME=${{ secrets.AWS_STORAGE_BUCKET_NAME }}
     - name: Release App to Heroku 
       env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
       run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME_PROD }} web 
